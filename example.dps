module example;

import std/{tellraw, sqrt, ALL_PLAYERS};

// This is a basic function:
fn say_hi() {
    // `const` means this is just something that gets substituted for the real value during compilation.
    // The `&` just adds those properties to the component.
    const base = component: "Hello, " & { color: "green" };
    // this is syntactic sugar - this is really: new array, add(...), add(...)
    let text = [base, { text: "", extra: [{ selector: "@s" }], color: red }];

    // `[...text]` is syntactic sugar - it creates a new array and adds everything in `text` to it.
    tellraw(ALL_PLAYERS, [...text]);
}

// Every module can have an init block, which will be its own function and added to the load tag.
init {
    const txt = component: "Hello, world!" & { color: "green" };
    let data = sqrt(100);
    const base = component: "The square root of 100 is: ";
    let msg = [base, data];

    tellraw(ALL_PLAYERS, [txt]);
    tellraw(ALL_PLAYERS, [...msg]);

    // execute as @a run ...
    for player in ALL_PLAYERS {
        say_hi();
    }
}

// Every module can also have a tick block, which will be its own function and added to the tick tag.
tick {
    // idk, do something here.
}
